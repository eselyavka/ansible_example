- name: 'set hostname'
  hostname: name={{ inventory_hostname }}
  when: ec2_tag_Name is not defined

- name: 'set ec2 hostname'
  hostname: name={{ ec2_tag_Name }}
  when: ec2_tag_Name is defined

- name: 'update /etc/hosts'
  lineinfile:
    dest: /etc/hosts
    insertbefore: '127\.0\.0\.1.*'
    line: '127.0.0.1 {{ ec2_tag_Name }}'
  when: ec2_tag_Name is defined and ( groups['tag_role_database'] is defined or groups['tag_role_app'] is defined )

- name: 'stop iptables and ip6tables'
  service: name={{ item }} state=stopped enabled=no
  with_items: "{{ iptstop }}"

- name: '/etc/selinux/config exists'
  stat: path=/etc/selinux/config
  register: secfg

- name: 'install libselinux-python'
  yum: name=libselinux-python state=present
  when: secfg.stat.exists == True

- name: 'disable selinux'
  selinux: state=disabled
  when: secfg.stat.exists == True

- name: 'reboot'
  command: shutdown -r now
  when: ansible_selinux.status is defined and ansible_selinux.status != 'disabled'

- name: 'wait for reboot'
  local_action: wait_for port=22 host={{ ansible_ssh_host | default(inventory_hostname) }} search_regex=OpenSSH delay=30
  sudo: false
  when: ansible_selinux.status is defined and ansible_selinux.status != 'disabled' and ec2_ip_address is not defined

- name: 'wait for reboot'
  local_action: wait_for port=22 host={{ ansible_ssh_host | default(ec2_ip_address) }} search_regex=OpenSSH delay=30
  sudo: false
  when: ansible_selinux.status is defined and ansible_selinux.status != 'disabled' and ec2_ip_address is defined

- name: 'check share dir is mounted'
  mount: name=/vagrant src=vagrant fstype=vboxsf opts=uid=500,gid=500,rw state=mounted
  when: ansible_virtualization_type is defined and ansible_virtualization_type == 'virtualbox'

- name: 'configure timezone'
  command: cp /usr/share/zoneinfo/{{ timezone }} /etc/localtime

- name: 'set JAVA_HOME'
  lineinfile:
    dest: /etc/environment
    regexp: '^JAVA_HOME'
    line: "JAVA_HOME='/opt/jdk1.8.0_25/jre/'"

- name: 'set JAVA_HOME in .bashrc'
  lineinfile:
    dest: /home/vagrant/.bashrc
    regexp: '^export JAVA_HOME'
    line: "export JAVA_HOME='/opt/jdk1.8.0_25/jre/'"

- name: 'make oracle java default'
  alternatives:
    name: java
    link: /usr/bin/java
    path: /opt/jdk1.8.0_25/jre/bin/java
    priority: 1000000

- name: 'install needed packages'
  yum: name={{ item }} state=present
  with_items: "{{ packages }}"

- name: 'remove httpd package'
  yum: name=httpd state=absent

- name: 'start needed services'
  service: name=ntpd state=started enabled=yes
